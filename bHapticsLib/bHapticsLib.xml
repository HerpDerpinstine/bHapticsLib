<?xml version="1.0"?>
<doc>
    <assembly>
        <name>bHapticsLib</name>
    </assembly>
    <members>
        <member name="T:bHapticsLib.bHapticsConnection">
            <summary>bHaptics Player Connection Handler</summary>
        </member>
        <member name="P:bHapticsLib.bHapticsConnection.IPAddress">
            <value>IP Address of Host Device running the bHaptics Player</value>
        </member>
        <member name="P:bHapticsLib.bHapticsConnection.ID">
            <value>Application Identifier</value>
        </member>
        <member name="P:bHapticsLib.bHapticsConnection.Name">
            <value>Application Name</value>
        </member>
        <member name="F:bHapticsLib.bHapticsConnection.TryToReconnect">
            <value>If the Connection should attempt to Reconnect after failure or unexpected closure</value>
        </member>
        <member name="P:bHapticsLib.bHapticsConnection.MaxRetries">
            <value>Maximum number of Connection Retry Attempts to Perform, 0 for infinite, default value is 5</value>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary>bHaptics Player Connection Handler</summary>
            <param name="id">Application Identifier</param>
            <param name="name">Application Name</param>
            <param name="tryToReconnect">If the Connection should attempt to Reconnect after failure or unexpected closure</param>
            <param name="maxRetries">Maximum number of Connection Retry Attempts to Perform, 0 for infinite, default value is 5</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.#ctor(System.Net.IPAddress,System.String,System.String,System.Boolean,System.Int32)">
            <summary>bHaptics Player Connection Handler</summary>
            <param name="ipaddress">IP Address of Host Device running the bHaptics Player</param>
            <param name="id">Application Identifier</param>
            <param name="name">Application Name</param>
            <param name="tryToReconnect">If the Connection should attempt to Reconnect after failure or unexpected closure</param>
            <param name="maxRetries">Maximum number of Connection Retry Attempts to Perform, 0 for infinite, default value is 5</param>
        </member>
        <member name="P:bHapticsLib.bHapticsConnection.Status">
            <value>Current Status of Connection</value>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.GetConnectedDeviceCount">
            <summary>Gets the total amount of devices currently connected to the bHaptics Player</summary>
            <returns>The total amount of devices currently connected to the bHaptics Player</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.IsDeviceConnected(bHapticsLib.PositionID)">
            <summary>Gets if a specific device is currently connected to the bHaptics Player</summary>
            <returns>true if the device is connected, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.GetDeviceStatus(bHapticsLib.PositionID)">
            <summary>Gets the current status a specific device.</summary>
            <returns>An Integer Array containing the current intensity value for each motor of the device</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.IsPlaying(System.String)">
            <summary>Gets if a specified pattern is currently playing</summary>
            <param name="key">The key id of the pattern</param>
            <returns>true if the specified pattern is playing, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.IsPlayingAny">
            <summary>Gets if any pattern is currently playing</summary>
            <returns>true if any pattern is playing, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.StopPlaying(System.String)">
            <summary>Stops the specified pattern</summary>
            <param name="key">The key id of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.StopPlayingAll">
            <summary>Stops all currently playing patterns</summary>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.IsPatternRegistered(System.String)">
            <summary>Checks if the specified pattern is Registered in the Cache</summary>
            <param name="key">The key id of the pattern</param>
            <returns>true if Registered, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.RegisterPatternFromFile(System.String,System.String)">
            <summary>Registers a pattern from file path in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.RegisterPatternFromJson(System.String,System.String)">
            <summary>Registers a pattern from raw json in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.RegisterPatternSwappedFromFile(System.String,System.String)">
            <summary>Registers a pattern swapped from file path in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.RegisterPatternSwappedFromJson(System.String,System.String)">
            <summary>Registers a pattern swapped from raw json in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.Play``2(System.String,System.Int32,bHapticsLib.PositionID,``0,``1,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">DotPoint Collection Type</typeparam>
            <typeparam name="B">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Collection of int, byte, or DotPoint</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.PlayRegistered(System.String,System.String,bHapticsLib.ScaleOption,bHapticsLib.RotationOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="altKey">Alternative Key id of this pattern, can be null</param>
            <param name="scaleOption">Custom Playback Scale Option, can be null</param>
            <param name="rotationOption">Custom Playback Rotation Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsConnection.PlayRegisteredMillis(System.String,System.Int32)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="startTimeMillis">Playback Start Time Delay in Milliseconds</param>
        </member>
        <member name="T:bHapticsLib.bHapticsManager">
            <summary>AIO bHaptics Management</summary>
        </member>
        <member name="F:bHapticsLib.bHapticsManager.MaxIntensityInInt">
            <value>Max Intensity of Point in Integer Array</value>
        </member>
        <member name="F:bHapticsLib.bHapticsManager.MaxIntensityInByte">
            <value>Max Intensity of Point in Byte Array</value>
        </member>
        <member name="F:bHapticsLib.bHapticsManager.MaxMotorsPerDotPoint">
            <value>Max Motors per DotPoint</value>
        </member>
        <member name="F:bHapticsLib.bHapticsManager.MaxMotorsPerPathPoint">
            <value>Max Motors per PathPoint</value>
        </member>
        <member name="P:bHapticsLib.bHapticsManager.Status">
            <value>Current Status of Connection</value>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Connect(System.String,System.String,System.Boolean,System.Int32)">
            <summary>Connects to the bHaptics Player</summary>
            <param name="id">Application Identifier</param>
            <param name="name">Application Name</param>
            <param name="tryToReconnect">If the Connection should attempt to Reconnect after failure or unexpected closure</param>
            <param name="maxRetries">Maximum number of Connection Retry Attempts to Perform, 0 for infinite, default value is 5</param>
            <returns>true if Successful, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Disconnect">
            <summary>Disconnects from the bHaptics Player</summary>
            <returns>true if Successful, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.GetConnectedDeviceCount">
            <summary>Gets the total amount of devices currently connected to the bHaptics Player</summary>
            <returns>The total amount of devices currently connected to the bHaptics Player</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsAnyDevicesConnected">
            <summary>Gets if any devices are currently connected to the bHaptics Player</summary>
            <returns>true if there is a device, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsDeviceConnected(bHapticsLib.PositionID)">
            <summary>Gets if a specific device is currently connected to the bHaptics Player</summary>
            <returns>true if the device is connected, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.GetDeviceStatus(bHapticsLib.PositionID)">
            <summary>Gets the current status a specific device.</summary>
            <returns>An Integer Array containing the current intensity value for each motor of the device</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsAnyMotorActive(bHapticsLib.PositionID)">
            <summary>Gets if any motor of a specific device is currently at an intensity value of more than 0</summary>
            <returns>true if there is a motor active, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsPlaying(System.String)">
            <summary>Gets if a specified pattern is currently playing</summary>
            <param name="key">The key id of the pattern</param>
            <returns>true if the specified pattern is playing, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsPlayingAny">
            <summary>Gets if any pattern is currently playing</summary>
            <returns>true if any pattern is playing, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.StopPlaying(System.String)">
            <summary>Stops the specified pattern</summary>
            <param name="key">The key id of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.StopPlayingAll">
            <summary>Stops all currently playing patterns</summary>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.IsPatternRegistered(System.String)">
            <summary>Checks if the specified pattern is Registered in the Cache</summary>
            <param name="key">The key id of the pattern</param>
            <returns>true if Registered, otherwise false</returns>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.RegisterPatternFromJson(System.String,System.String)">
            <summary>Registers a pattern from raw json in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.RegisterPatternFromFile(System.String,System.String)">
            <summary>Registers a pattern from file path in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.RegisterPatternSwappedFromJson(System.String,System.String)">
            <summary>Registers a pattern swapped from raw json in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.RegisterPatternSwappedFromFile(System.String,System.String)">
            <summary>Registers a pattern swapped from file path in the cache</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,System.Int32[])">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of int signifying DotPoints</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Int32})">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of int signifying DotPoints</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,System.Byte[])">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of byte signifying DotPoints</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Byte})">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of byte signifying DotPoints</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,bHapticsLib.DotPoint[])">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of DotPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{bHapticsLib.DotPoint})">
            <summary>Plays a pattern</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of DotPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,System.Int32[],``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of int signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Int32},``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of int signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,System.Byte[],``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of byte signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Byte},``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of byte signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,bHapticsLib.DotPoint[],``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of DotPoint</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.Play``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{bHapticsLib.DotPoint},``0)">
            <summary>Plays a pattern</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of DotPoint</param>
            <param name="pathPoints">Collection of PathPoint</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,System.Int32[],bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of int signifying DotPoints</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Int32},bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of int signifying DotPoints</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,System.Byte[],bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of byte signifying DotPoints</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Byte},bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of byte signifying DotPoints</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,bHapticsLib.DotPoint[],bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of DotPoint</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{bHapticsLib.DotPoint},bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of DotPoint</param>
            <param name="mirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,System.Int32[],``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of int signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Int32},``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of int signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,System.Byte[],``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of byte signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{System.Byte},``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of byte signifying DotPoints</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,bHapticsLib.DotPoint[],``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">Array of DotPoint</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayMirrored``1(System.String,System.Int32,bHapticsLib.PositionID,System.Collections.Generic.List{bHapticsLib.DotPoint},``0,bHapticsLib.MirrorDirection)">
            <summary>Plays a pattern mirrored</summary>
            <typeparam name="A">PathPoint Collection Type</typeparam>
            <param name="key">Key id of this pattern</param>
            <param name="durationMillis">Duration of Playback</param>
            <param name="position">Position for Playback</param>
            <param name="dotPoints">List of DotPoint</param>
            <param name="pathPoints">Collection of PathPoint</param>
            <param name="dotMirrorDirection">Direction to Mirror Playback</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,System.Int32)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="startTimeMillis">Playback Start Time Delay in Milliseconds</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,bHapticsLib.ScaleOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="option">Custom Playback Scale Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,bHapticsLib.RotationOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="option">Custom Playback Rotation Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,bHapticsLib.ScaleOption,bHapticsLib.RotationOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="scaleOption">Custom Playback Scale Option, can be null</param>
            <param name="rotationOption">Custom Playback Rotation Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,System.String)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="altKey">Alternative Key id of this pattern, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,System.String,bHapticsLib.ScaleOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="altKey">Alternative Key id of this pattern, can be null</param>
            <param name="option">Custom Playback Scale Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,System.String,bHapticsLib.RotationOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="altKey">Alternative Key id of this pattern, can be null</param>
            <param name="option">Custom Playback Rotation Option, can be null</param>
        </member>
        <member name="M:bHapticsLib.bHapticsManager.PlayRegistered(System.String,System.String,bHapticsLib.ScaleOption,bHapticsLib.RotationOption)">
            <summary>Plays a registered pattern from the Cache</summary>
            <param name="key">Key id of this pattern</param>
            <param name="altKey">Alternative Key id of this pattern, can be null</param>
            <param name="scaleOption">Custom Playback Scale Option, can be null</param>
            <param name="rotationOption">Custom Playback Rotation Option, can be null</param>
        </member>
        <member name="T:bHapticsLib.bHapticsStatus">
            <summary>Enum for Connection Status</summary>
        </member>
        <member name="F:bHapticsLib.bHapticsStatus.Disconnected">
            <summary>Disconnected from the bHaptics Player</summary>
        </member>
        <member name="F:bHapticsLib.bHapticsStatus.Connecting">
            <summary>Attempting to Connect to the bHaptics Player</summary>
        </member>
        <member name="F:bHapticsLib.bHapticsStatus.Connected">
            <summary>Connected to the bHaptics Player</summary>
        </member>
        <member name="T:bHapticsLib.DotPoint">
            <summary>Haptic Point for Dot Mode</summary>
        </member>
        <member name="M:bHapticsLib.DotPoint.#ctor(System.Int32,System.Int32)">
            <summary>Haptic Point for Dot Mode</summary>
            <param name="index">Index of Haptic Motor</param>
            <param name="intensity">Point Intensity</param>
        </member>
        <member name="P:bHapticsLib.DotPoint.Index">
            <value>Index of Haptic Motor</value>
        </member>
        <member name="P:bHapticsLib.DotPoint.Intensity">
            <value>Point Intensity</value>
        </member>
        <member name="T:bHapticsLib.Extensions">
            <summary>Extra Extensions</summary>
        </member>
        <member name="M:bHapticsLib.Extensions.ToOscAddress(bHapticsLib.PositionID)">
            <summary>Converts PositionID to an Open Sound Control formatted address string.</summary>
            <returns>An Open Sound Control formatted address string.</returns>
        </member>
        <member name="T:bHapticsLib.HapticPattern">
            <summary>Haptic Pattern Utility</summary>
        </member>
        <member name="P:bHapticsLib.HapticPattern.Key">
            <value>Pattern key id</value>
        </member>
        <member name="M:bHapticsLib.HapticPattern.LoadFromJson(System.String,System.String)">
            <summary>Loads a pattern from raw json into HapticPattern</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.LoadFromFile(System.String,System.String)">
            <summary>Loads a pattern from file path into HapticPattern</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.LoadSwappedFromJson(System.String,System.String)">
            <summary>Loads a pattern swapped from raw json into HapticPattern</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFileJson">The raw json of the pattern</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.LoadSwappedFromFile(System.String,System.String)">
            <summary>Loads a pattern swapped from file path into HapticPattern</summary>
            <param name="key">The key id of the pattern</param>
            <param name="tactFilePath">The file path of the pattern</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.IsRegistered">
            <summary>Checks if the HapticPattern is Registered</summary>
        </member>
        <member name="M:bHapticsLib.HapticPattern.IsPlaying">
            <summary>Checks if the HapticPattern is Playing</summary>
        </member>
        <member name="M:bHapticsLib.HapticPattern.Stop">
            <summary>Stops the HapticPattern</summary>
        </member>
        <member name="M:bHapticsLib.HapticPattern.Play">
            <summary>Plays the HapticPattern</summary>
        </member>
        <member name="M:bHapticsLib.HapticPattern.Play(bHapticsLib.ScaleOption)">
            <summary>Plays the HapticPattern</summary>
            <param name="option">Custom Playback Scale Option</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.Play(bHapticsLib.RotationOption)">
            <summary>Plays the HapticPattern</summary>
            <param name="option">Custom Playback Rotation Option</param>
        </member>
        <member name="M:bHapticsLib.HapticPattern.Play(bHapticsLib.ScaleOption,bHapticsLib.RotationOption)">
            <summary>Plays the HapticPattern</summary>
            <param name="scaleOption">Custom Playback Scale Option</param>
            <param name="rotationOption">Custom Playback Rotation Option</param>
        </member>
        <member name="T:bHapticsLib.Internal.ThreadedTask">
            <summary>Handles Multi-Threaded Tasking</summary>
        </member>
        <member name="M:bHapticsLib.Internal.ThreadedTask.BeginInit">
            <summary>Initializes the Task's Thread</summary>
            <returns>If the initialization was successful or not.</returns>
        </member>
        <member name="M:bHapticsLib.Internal.ThreadedTask.EndInit">
            <summary>Aborts the Task's Thread</summary>
            <returns>If the abortion was successful or not.</returns>
        </member>
        <member name="T:bHapticsLib.MirrorDirection">
            <summary>Direction to Mirror a Pattern</summary>
        </member>
        <member name="F:bHapticsLib.MirrorDirection.None">
            <summary>No Mirroring</summary>
        </member>
        <member name="F:bHapticsLib.MirrorDirection.Horizontal">
            <summary>Horizontal Mirroring</summary>
        </member>
        <member name="F:bHapticsLib.MirrorDirection.Vertical">
            <summary>Vertical Mirroring</summary>
        </member>
        <member name="F:bHapticsLib.MirrorDirection.Both">
            <summary>Horizontal and Vertical Mirroring</summary>
        </member>
        <member name="T:bHapticsLib.PathPoint">
            <summary>Haptic Point for Path Mode</summary>
        </member>
        <member name="M:bHapticsLib.PathPoint.#ctor(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>Haptic Point for Path Mode</summary>
            <param name="x">X Axis of Point Position</param>
            <param name="y">Y Axis of Point Position</param>
            <param name="intensity">Point Intensity</param>
            <param name="motorCount">Point Motor Count</param>
        </member>
        <member name="P:bHapticsLib.PathPoint.X">
            <value>X Axis of Point Position</value>
        </member>
        <member name="P:bHapticsLib.PathPoint.Y">
            <value>Y Axis of Point Position</value>
        </member>
        <member name="P:bHapticsLib.PathPoint.Intensity">
            <value>Point Intensity</value>
        </member>
        <member name="P:bHapticsLib.PathPoint.MotorCount">
            <value>Point Motor Count</value>
        </member>
        <member name="T:bHapticsLib.PositionID">
            <summary>ID of Haptic Position</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.Vest">
            <summary>TactSuit</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.Head">
            <summary>Tactal</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.HandLeft">
            <summary>Tactosy for Left Hand</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.HandRight">
            <summary>Tactosy for Right Hand</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.FootLeft">
            <summary>Tactosy for Left Foot</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.FootRight">
            <summary>Tactosy for Right Foot</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.ArmLeft">
            <summary>Tactosy for Left Arm</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.ArmRight">
            <summary>Tactosy for Right Arm</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.VestFront">
            <summary>Front of TactSuit</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.VestBack">
            <summary>Back of TactSuit</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.GloveLeft">
            <summary>TactGlove for Left Hand</summary>
        </member>
        <member name="F:bHapticsLib.PositionID.GloveRight">
            <summary>TactGlove for Right Hand</summary>
        </member>
        <member name="T:bHapticsLib.RotationOption">
            <summary>Rotational Option for Haptic Patterns</summary>
        </member>
        <member name="M:bHapticsLib.RotationOption.#ctor(System.Single,System.Single)">
            <summary>Rotational Option for Haptic Patterns</summary>
            <param name="offsetAngleX">Rotation Angle X Axis</param>
            <param name="offsetY">Rotation Y Axis</param>
        </member>
        <member name="P:bHapticsLib.RotationOption.OffsetAngleX">
            <value>Rotation Angle X Axis</value>
        </member>
        <member name="P:bHapticsLib.RotationOption.OffsetY">
            <value>Rotation Y Axis</value>
        </member>
        <member name="T:bHapticsLib.ScaleOption">
            <summary>Scaling Option for Haptic Patterns</summary>
        </member>
        <member name="M:bHapticsLib.ScaleOption.#ctor(System.Single,System.Single)">
            <summary>Scaling Option for Haptic Patterns</summary>
            <param name="intensity">Scale of Intensity, default is 1x</param>
            <param name="duration">Scale of Duration of Playback, default is 1x</param>
        </member>
        <member name="P:bHapticsLib.ScaleOption.Intensity">
            <value>Scale of Intensity, default is 1x</value>
        </member>
        <member name="P:bHapticsLib.ScaleOption.Duration">
            <value>Scale of Duration of Playback, default is 1x</value>
        </member>
    </members>
</doc>
